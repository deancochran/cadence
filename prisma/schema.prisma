generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "sqlite"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  PRO
  BASE
}

model User {
  id                      String                   @id @unique
  // User Attributes
  username                String                   @unique
  email                   String                   @unique
  email_verified          Boolean                  @default(false)
  created_at              DateTime                 @default(now())
  stripe_id               String?                  @unique
  role                    UserRole?                @default(BASE)
  // Relationships
  auth_sessions           Session[]
  keys                    Key[]
  passwordResetTokens     PasswordResetToken[]
  emailVerificationTokens EmailVerificationToken[]
  Subscriptions           Subscription[]
}

model Subscription {
  stripe_id            String    @id @unique
  user_id              String
  cancel_at            DateTime?
  cancel_at_period_end Boolean?
  canceled_at          DateTime?
  current_period_start DateTime
  current_period_end   DateTime
  created              DateTime
  ended_at             DateTime?
  start_date           DateTime
  trial_start          DateTime?
  trial_end            DateTime?
  metadata             Json
  status               String
  user                 User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model PasswordResetToken {
  id      String  @id @unique
  expires BigInt?
  user_id String
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model EmailVerificationToken {
  id      String  @id @unique
  expires BigInt?
  user_id String
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}
